//
// Copyright (c) 2021-2025. NICE Ltd. All rights reserved.
//
// Licensed under the NICE License;
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://github.com/nice-devone/nice-cxone-mobile-guide-utility-ios/blob/main/LICENSE
//
// TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE CXONE MOBILE SDK IS PROVIDED ON
// AN “AS IS” BASIS. NICE HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS, EXPRESS
// OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND TITLE.
//

import Foundation

/// An add-on protocol to describe a class which must be closed after use.
protocol HasClose {
    /// Close an instance after usage.
    func close() throws
}

extension HasClose {
    /// Execute a block of code guaranteeing it is `close`d after usage.
    /// - Parameter body: block to be safely executed
    /// - Returns value returned by `body` if any.
    /// - Throws Rethrows any exception generated by `body`.
    func use<T>(_ body: (Self) throws -> T) rethrows -> T {
        defer {
            try? close()
        }
        
        return try body(self)
    }
}
